SETTING UP AN FTP SERVER INSIDE A VPS

You will now set up an FTP server inside your Ubuntu VPS. This server is named 'vsftpd', which is the fastest FTP server available for systems similar to UNIX.

- What is FTP?

File Transfer Protocol is a medium to send and receive files using a network connection. It allows users to share files with remote computers using the TCP/IP protocols, transfering data securely and efficiently.

* Set up the FTP server inside Ubuntu 18.0

1. Install vsftpd in the server

You are going to install Vsftpd. Follow the steps:

(Window: PuTTY Command Line)
  > Log into your server.
  $ sudo apt-get update # Downloads and installs the available updates to the packets inside the OS
  $ sudo apt-get install vsftpd # Installs the daemon vsftpd
  > Confirm the installation by pressing 'Y' and 'ENTER', then wait for the processes to complete.
  $ sudo cp /etc/vsftpd.conf /etc/vsftpd.conf.original # Makes a backup of the original file

2. Allow FTP traffic to pass through the firewall

You are now going to allow FTP traffic to pass through the firewall. Follow the steps:
(Window: PuTTY Command Line)
  $ sudo ufw status # Checks if the firewall is set up in the machine
  > If the following message appears on screen:
      ufw: command not found
    It means that the firewall is not installed, and you can continue with the next set of steps
  > [COMPLETE THIS PART: https://www.hostinger.co/tutoriales/como-configurar-servidor-ftp-en-ubuntu-vps/]

3. Grant access to your users to the FTP server

You are now going to create the directory of users to select the user that is going to use the FTP access. Follow the steps:

(Window: PuTTY Command Line)
  > Create a new user, or have in mind the user that you want to give access to.
  $ sudo mkdir /home/{youruser}/ftp # Creates a new folder 'ftp' inside the directory of {youruser}
  $ sudo chown nobody:nogroup /home/{youruser}/ftp  # Restricts the specified user to start his session inside the ftp folder
  $ sudo chmod a-w /home/{youruser}/ftp # Deletes the writing privileges to the folder
  $ sudo ls -la /home/{youruser}/ftp  # Verifies the privileges for the user
  > The result should show the privileges like so:
    total 8
    dr-xr-xr-x 2 nobody nogroup 4096 Month Day Time
    drwxr-xr-x 3 {youruser}     4096 Month Day Time
    ...
  $ sudo mkdir /home/{youruser}/ftp/files # Creates the 'files' directory inside of which the user is going to store his files
  $ sudo chown {youruser}:{youruser} /home/{youruser}/ftp/files # Assigns ownership to the 'files' directory to {youruser}, so he can write to it
  $ echo "vsftpd sample file" | sudo tee /home/{youruser}/ftp/files/sample.txt  # Adds a new file inside the new folder to test the previous process

4. Allow your users to connect to vsftpd from their local machines

You are now going to set up vsftpd so that your user can connect to it from his machine. Follow the steps:
(Window: PuTTY Command Line)
  $ sudo nano /etc/vsftpd.conf  # Opens the 'vsftpd.conf' file in nano editor
  > Once the file opens, check that the file has a setting that coincides with the following:
    ...
    # Allow anonumous FTP (Disabled by default).
    anonymous_enable=NO
    #
    # Uncomment this to allow local users to log in.
    local_enable=YES
    ...
  > Delete the '#' character and enable 'write_enable' by changing its value to 'YES'.
  > Check that 'chroot_local_user' equals 'YES' to ensure that the connected user can access only the files inside his folder.
  > Add the following settings at the bottom of the file:
      user_sub_token=$USER
      local_root=/home/$USER/ftp
    These lines allow the settings to work for this and any other user that could be added later.
  > Guarantee that there are plenty of available connections to the FTP server by setting up the following lines:
    pasv_min_port=40000
    pasv_max_port=50000
  > Adjust the settings so that the access can only be granted to the users inside a list, by changing/typing:
    userlist_enable=YES
    userlist_file=/etc/vsftpd.userlist
    userlist_deny=NO
  > Press 'CTRL+X' and confirm the changes in the file.
  > Create and add the user inside the said list, by typing:
    $ echo "{youruser}" | sudo tee -a /etc/vsftpd.userlist
  > Verify that the user is really active inside the list:
      $ cat /etc/vsftpd.userlist
    The result should be the name of your user.
  > Restart the daemon to load the settings file
    $ sudo systemctl restart vsftpd

5. Make your FTP server secure

You are now going to set up some encryption to the transfer of your files to guarantee security. Follow the steps:
(Window: PuTTY Command Line)
  > Create the SSL certificate to protect the FTP server by typing:
      $ sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/vsftpd.pem -out /etc/ssl/private/vsftpd.pem
    The flag '-days' allows the certificate to be available for one year. Fill in your information.
  $ sudo nano /etc/vsftpd.conf  # Opens the vsftpd settings file
  > There should be two lines that start with 'rsa_' at the end of the opened file. Comment them, like so:
    # rsa_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem
    # rsa_private_key_file=/etc/ssl/private/ssl-cert-snakeoil.key
  > Add the following lines to point the settings file to the newly created SSL certificate:
    rsa_cert_file=/etc/ssl/private/vsftpd.pem
    rsa_private_key_file=/etc/ssl/private/vsftpd.pem
  > Change the value of 'ssl_enable' to 'YES'
  > Add the following lines to restrict anonymous connections through SSL:
    allow_anon_ssl=NO
    force_local_data_ssl=YES
    force_local_logins_ssl=YES
  > Set up the server to use TLS using:
    ssl_tlsv1=YES
    ssl_sslv2=NO
    ssl_sslv3=NO
  > Add the following options to prevent FTP clients to hault by reusing SSL, and use encryption high-cyphering suits (key length is equal or more to 128 bits)
    require_ssl_reuse=NO
    ssl_ciphers=HIGH
  > Save the file
  > Restart vsftpd service to apply the new settings
    $ sudo systemctl restart vsftpd

Great! You have set up a FTP server inside your VPS so that it works with SSL/TLS protocol.

6. Test your connection with FileZilla

FileZilla or WinSCP are FTP clients that allow file sharing between servers in an intuitive way. Download any of them, and follow the steps:

(Window: FileZilla opening page)
  > Click on the 'Site Manager' icon.
  > Click on the 'New Site' button to start adding the details of the FTP server.
  > Complete all the information, so that it looks like this:
    Host: {yourserverIP}
    Port: 21
    Protocol: FTP-File Transfer Protocol
    Encryption: Use explicit FTP over TLS if available
    Logon Type: Ask for password
    User: {yourusername}
    Password: {yourpassword}
  > Click on 'Connect' button, and type in your password.
  > Verify the SSL certificate of your FTP server.
  > After confirmation, the root folder with the test file should appear in your screen.

Great! Now you can make file transfers to the FTP server and viceversa.
